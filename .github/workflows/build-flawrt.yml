name: Build Flawrt

on:
  push:
    branches:
      - main  # 触发编译的分支，可以根据需要修改
  workflow_dispatch:  # 手动触发编译

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt update -y
        sudo apt full-upgrade -y
        sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
        bzip2 ccache clang clangd cmake cpio curl device-tree-compiler ecj fastjar flex gawk gettext gcc-multilib \
        g++-multilib git gperf haveged help2man intltool lib32gcc-s1 libc6-dev-i386 libelf-dev libglib2.0-dev \
        libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5 libncursesw5-dev libreadline-dev \
        libssl-dev libtool lld lldb lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 \
        python3 python3-pip python3-ply python-docutils qemu-utils re2c rsync scons squashfs-tools subversion swig \
        texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev

    - name: Clone Flawrt repository
      run: git clone --depth=1 https://github.com/reflander/flawrt.git

    - name: Change directory to Flawrt
      run: cd flawrt

    - name: Update feeds
      run: ./scripts/feeds update -a

    - name: Install feeds
      run: ./scripts/feeds install -a

    - name: Copy and rename config
      run: cp -f defconfig/mt7981-ax3000.config .config  # 根据需要选择合适的配置文件

    - name: Configure
      run: make menuconfig  # 根据需要进行配置

    - name: Build firmware
      run: make V=s -j$(nproc)

    - name: Prepare artifact
      run: |
        mkdir -p ./artifact/firmware
        mkdir -p ./artifact/package
        mkdir -p ./artifact/buildinfo
        rm -rf $(find ./bin/targets/ -type d -name "packages")
        cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
        cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
        cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

    - name: Deliver buildinfo
      uses: actions/upload-artifact@v2
      with:
        name: Flawrt_buildinfo
        path: ./artifact/buildinfo/

    - name: Deliver package
      uses: actions/upload-artifact@v2
      with:
        name: Flawrt_package
        path: ./artifact/package/

    - name: Deliver firmware
      uses: actions/upload-artifact@v2
      with:
        name: Flawrt_firmware
        path: ./artifact/firmware/

    - name: Upload release asset
      if: github.event == 'release'
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.YOURTOKEN }}
        file: ./artifact/firmware/*
        tag: ${{ github.ref }}
        file_glob: true
